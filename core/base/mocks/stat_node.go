// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import base "github.com/alibaba/sentinel-golang/core/base"
import mock "github.com/stretchr/testify/mock"

// StatNode is an autogenerated mock type for the StatNode type
type StatNode struct {
	mock.Mock
}

// AddMetric provides a mock function with given fields: event, count
func (_m *StatNode) AddMetric(event base.MetricEvent, count uint64) {
	_m.Called(event, count)
}

// AvgRT provides a mock function with given fields:
func (_m *StatNode) AvgRT() float64 {
	ret := _m.Called()

	var r0 float64
	if rf, ok := ret.Get(0).(func() float64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// CurrentGoroutineNum provides a mock function with given fields:
func (_m *StatNode) CurrentGoroutineNum() int32 {
	ret := _m.Called()

	var r0 int32
	if rf, ok := ret.Get(0).(func() int32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int32)
	}

	return r0
}

// DecreaseGoroutineNum provides a mock function with given fields:
func (_m *StatNode) DecreaseGoroutineNum() {
	_m.Called()
}

// GetQPS provides a mock function with given fields: event
func (_m *StatNode) GetQPS(event base.MetricEvent) float64 {
	ret := _m.Called(event)

	var r0 float64
	if rf, ok := ret.Get(0).(func(base.MetricEvent) float64); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// GetSum provides a mock function with given fields: event
func (_m *StatNode) GetSum(event base.MetricEvent) int64 {
	ret := _m.Called(event)

	var r0 int64
	if rf, ok := ret.Get(0).(func(base.MetricEvent) int64); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// IncreaseGoroutineNum provides a mock function with given fields:
func (_m *StatNode) IncreaseGoroutineNum() {
	_m.Called()
}

// MetricsOnCondition provides a mock function with given fields: predicate
func (_m *StatNode) MetricsOnCondition(predicate base.TimePredicate) []*base.MetricItem {
	ret := _m.Called(predicate)

	var r0 []*base.MetricItem
	if rf, ok := ret.Get(0).(func(base.TimePredicate) []*base.MetricItem); ok {
		r0 = rf(predicate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*base.MetricItem)
		}
	}

	return r0
}

// MinRT provides a mock function with given fields:
func (_m *StatNode) MinRT() float64 {
	ret := _m.Called()

	var r0 float64
	if rf, ok := ret.Get(0).(func() float64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// Reset provides a mock function with given fields:
func (_m *StatNode) Reset() {
	_m.Called()
}
